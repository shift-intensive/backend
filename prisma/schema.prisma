generator client {
  provider = "prisma-client-js"
}

// generator dbml {
//   provider = "prisma-dbml-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("SQL_DATABASE_URL")
}

enum HistoryType {
  LOGIN_HISTORY
  PROFILE_CHANGE_HISTORY
}

model Otp {
  id          Int     @id @default(autoincrement())
  phone       String  @unique
  code        Int
  createdAt   DateTime @default(now())
  retryDelay  Int
}

model User {
  id         Int       @id @default(autoincrement())
  phone      String    @unique @db.VarChar(20)
  firstname  String?   @db.VarChar(50)
  middlename String?   @db.VarChar(50)
  lastname   String?   @db.VarChar(50)
  email      String?   @unique @db.VarChar(100)
  city       String?   @db.VarChar(100)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  loginHistory         LoginHistory[]
  userActions          UserActions[]
  profileChangeHistory ProfileChangeHistory[]
}

model LoginHistory {
  id        Int      @id @default(autoincrement())
  userId    Int
  loginTime DateTime @default(now())
  ipAddress String?

  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserActions {
  id         Int      @id @default(autoincrement())
  userId     Int
  action     String
  timestamp  DateTime @default(now())
  historyId  Int
  historyType HistoryType

  user       User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ProfileChangeHistory {
  id        Int      @id @default(autoincrement())
  userId    Int
  change    Json 
  timestamp DateTime @default(now())

  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
}